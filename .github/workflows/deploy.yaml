name: Build and deploy blog.vapor.codes

on:
  push:
    branches:
    - main

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - name: Install latesst Swift
        uses: vapor/swiftly-action@v0.2
        with:
          toolchain: latest
      - name: Checkout
        uses: actions/checkout@v5
      - name: Build site
        run: swift run
      - name: Configure AWS credentials
        id: cred
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.OIDC_ROLE_ARN }}
          aws-region: ${{ vars.OIDC_ROLE_REGION }}
      - name: Deploy to AWS Cloudformation
        id: clouddeploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: vapor-blog-stack
          template: stack.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            DomainName=blog.vapor.codes,
            S3BucketName=vapor-blog-site,
            AcmCertificateArn=${{ secrets.CERTIFICATE_ARN }}
        if: steps.cred.outcome == 'success'
      - name: Deploy Main Site to S3
        id: s3deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --exclude 'feed.rss'
        env:
          AWS_S3_BUCKET: 'vapor-blog-site'
          AWS_REGION: 'eu-west-2'
          SOURCE_DIR: 'Output'
        if: steps.clouddeploy.outcome == 'success'
      # This is done as a separate step to ensure the RSS feed is served with the correct content type
      - name: Deploy RSS Feed to S3
        id: s3deploy-rss
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --exclude '*' --include 'feed.rss' --content-type 'application/rss+xml'
        env:
          AWS_S3_BUCKET: 'vapor-blog-site'
          AWS_REGION: 'eu-west-2'
          SOURCE_DIR: 'Output'
        if: steps.clouddeploy.outcome == 'success'
      - name: Invalidate CloudFront
        uses: awact/cloudfront-action@master
        env:
          SOURCE_PATH: '/*'
          AWS_REGION: 'eu-west-2'
          DISTRIBUTION_ID: ${{ secrets.VAPOR_BLOG_DISTRIBUTION_ID }}
